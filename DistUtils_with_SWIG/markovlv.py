# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _markovlv
else:
    import _markovlv

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class MARKOVLV(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, lMaxTimesIpt, lMaxStatesIpt, lNrDefMomentsIpt):
        _markovlv.MARKOVLV_swiginit(self, _markovlv.new_MARKOVLV(lMaxTimesIpt, lMaxStatesIpt, lNrDefMomentsIpt))
    __swig_destroy__ = _markovlv.delete_MARKOVLV

    def vReset(self):
        return _markovlv.MARKOVLV_vReset(self)

    def vSetInternals(self, lMaxTimes, lMaxStates):
        return _markovlv.MARKOVLV_vSetInternals(self, lMaxTimes, lMaxStates)

    def vSetStartTime(self, lTime):
        return _markovlv.MARKOVLV_vSetStartTime(self, lTime)

    def vSetStopTime(self, lTime):
        return _markovlv.MARKOVLV_vSetStopTime(self, lTime)

    def vSetNrStates(self, lNrStatesIpt):
        return _markovlv.MARKOVLV_vSetNrStates(self, lNrStatesIpt)

    def vSetGetData(self, bStatus):
        return _markovlv.MARKOVLV_vSetGetData(self, bStatus)

    def dSetPre(self, lTime, lVon, lNach, dValue):
        return _markovlv.MARKOVLV_dSetPre(self, lTime, lVon, lNach, dValue)

    def dSetPost(self, lTime, lVon, lNach, dValue):
        return _markovlv.MARKOVLV_dSetPost(self, lTime, lVon, lNach, dValue)

    def dSetPij(self, lTime, lVon, lNach, dValue):
        return _markovlv.MARKOVLV_dSetPij(self, lTime, lVon, lNach, dValue)

    def dSetDisc(self, lTime, lVon, lNach, dValue):
        return _markovlv.MARKOVLV_dSetDisc(self, lTime, lVon, lNach, dValue)

    def vSetInterestModel(self, bStocInterest):
        return _markovlv.MARKOVLV_vSetInterestModel(self, bStocInterest)

    def vSetDefaultNrMoments(self, lNrMoments):
        return _markovlv.MARKOVLV_vSetDefaultNrMoments(self, lNrMoments)

    def dGetDK(self, lTime, lState, lMoment):
        return _markovlv.MARKOVLV_dGetDK(self, lTime, lState, lMoment)

    def dGetCF(self, lTime, lInitState, lTimeState):
        return _markovlv.MARKOVLV_dGetCF(self, lTime, lInitState, lTimeState)

    def dGetRP(self, lTime, lState):
        return _markovlv.MARKOVLV_dGetRP(self, lTime, lState)

    def dGetSP(self, lTime, lState):
        return _markovlv.MARKOVLV_dGetSP(self, lTime, lState)

    def dGetRegP(self, lTime, lState):
        return _markovlv.MARKOVLV_dGetRegP(self, lTime, lState)

    def lSetFolgezustand(self, lStateVon, lStateNach):
        return _markovlv.MARKOVLV_lSetFolgezustand(self, lStateVon, lStateNach)

    def lGetMaxTime(self):
        return _markovlv.MARKOVLV_lGetMaxTime(self)

    def lGetNrStates(self):
        return _markovlv.MARKOVLV_lGetNrStates(self)

    def lGetStartTime(self):
        return _markovlv.MARKOVLV_lGetStartTime(self)

    def lGetStopTime(self):
        return _markovlv.MARKOVLV_lGetStopTime(self)
    dAddBenefits = property(_markovlv.MARKOVLV_dAddBenefits_get, _markovlv.MARKOVLV_dAddBenefits_set)

    def vSetInitState(self, lInitState):
        return _markovlv.MARKOVLV_vSetInitState(self, lInitState)

    def vGenerateTrajectory(self):
        return _markovlv.MARKOVLV_vGenerateTrajectory(self)

    def vGetState(self, lTime):
        return _markovlv.MARKOVLV_vGetState(self, lTime)

    def dGetRandCF(self, lTime):
        return _markovlv.MARKOVLV_dGetRandCF(self, lTime)

    def dGetRandDK(self, lTime, lMoment):
        return _markovlv.MARKOVLV_dGetRandDK(self, lTime, lMoment)

    def dGetMeanCF(self, lTime, lState, lNrSim):
        return _markovlv.MARKOVLV_dGetMeanCF(self, lTime, lState, lNrSim)

    def dGetMeanDK(self, lTime, lState, lNrSim):
        return _markovlv.MARKOVLV_dGetMeanDK(self, lTime, lState, lNrSim)

    def vNewSeed(self, lSeed):
        return _markovlv.MARKOVLV_vNewSeed(self, lSeed)

    def vResetMeanResults(self):
        return _markovlv.MARKOVLV_vResetMeanResults(self)
    lSeed = property(_markovlv.MARKOVLV_lSeed_get, _markovlv.MARKOVLV_lSeed_set)

    def vPrintTeX(self, psymTeXFile, bWithHeader, pcTitle, bAllEntries):
        return _markovlv.MARKOVLV_vPrintTeX(self, psymTeXFile, bWithHeader, pcTitle, bAllEntries)

    def vPrintTeXFileName(self, pcFileName, bWithHeader, pcTitle, bAllEntries):
        return _markovlv.MARKOVLV_vPrintTeXFileName(self, pcFileName, bWithHeader, pcTitle, bAllEntries)

# Register MARKOVLV in _markovlv:
_markovlv.MARKOVLV_swigregister(MARKOVLV)
class CAPITALLV(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _markovlv.CAPITALLV_swiginit(self, _markovlv.new_CAPITALLV(*args))
    __swig_destroy__ = _markovlv.delete_CAPITALLV

    def iSetTable(self, pcId):
        return _markovlv.CAPITALLV_iSetTable(self, pcId)

    def vSetStartTime(self, lTime):
        return _markovlv.CAPITALLV_vSetStartTime(self, lTime)

    def vSetStopTime(self, lTime):
        return _markovlv.CAPITALLV_vSetStopTime(self, lTime)

    def vSetSurvival(self, lTime, dValue):
        return _markovlv.CAPITALLV_vSetSurvival(self, lTime, dValue)

    def vSetDeath(self, dValue):
        return _markovlv.CAPITALLV_vSetDeath(self, dValue)

    def vSetPremium(self, dValue):
        return _markovlv.CAPITALLV_vSetPremium(self, dValue)

    def vSetSurvivalGen(self, lTime, dValue):
        return _markovlv.CAPITALLV_vSetSurvivalGen(self, lTime, dValue)

    def vSetDeathGen(self, lTime, dValue):
        return _markovlv.CAPITALLV_vSetDeathGen(self, lTime, dValue)

    def vSetPremiumGen(self, lTime, dValue):
        return _markovlv.CAPITALLV_vSetPremiumGen(self, lTime, dValue)

    def dSetQx(self, lTime, dValue):
        return _markovlv.CAPITALLV_dSetQx(self, lTime, dValue)

    def dSetFx(self, lTime, dValue):
        return _markovlv.CAPITALLV_dSetFx(self, lTime, dValue)

    def dSetBaseYear(self, lTime):
        return _markovlv.CAPITALLV_dSetBaseYear(self, lTime)

    def dSetActualYear(self, lTime):
        return _markovlv.CAPITALLV_dSetActualYear(self, lTime)

    def dSetDisc(self, lTime, dValue):
        return _markovlv.CAPITALLV_dSetDisc(self, lTime, dValue)

    def dGetDK(self, lTime):
        return _markovlv.CAPITALLV_dGetDK(self, lTime)

    def dGetCF(self, lTime):
        return _markovlv.CAPITALLV_dGetCF(self, lTime)

    def dGetQx(self, lTime, lYear):
        return _markovlv.CAPITALLV_dGetQx(self, lTime, lYear)

    def dSetQx2Level(self, lTime, dValue):
        return _markovlv.CAPITALLV_dSetQx2Level(self, lTime, dValue)

    def dSetSx2(self, lTime, dValue):
        return _markovlv.CAPITALLV_dSetSx2(self, lTime, dValue)

    def dSetRDR(self, lTime, dValue):
        return _markovlv.CAPITALLV_dSetRDR(self, lTime, dValue)

    def dSetSurenderPenaltyInMR(self, lTime, dValue):
        return _markovlv.CAPITALLV_dSetSurenderPenaltyInMR(self, lTime, dValue)

    def dSetSHMarginInMR(self, lTime, dValue):
        return _markovlv.CAPITALLV_dSetSHMarginInMR(self, lTime, dValue)

    def dSetSolaCapitalInMR(self, lTime, dValue):
        return _markovlv.CAPITALLV_dSetSolaCapitalInMR(self, lTime, dValue)

    def dSetInvReturn(self, lTime, dValue):
        return _markovlv.CAPITALLV_dSetInvReturn(self, lTime, dValue)

    def dGetEV(self, lTime):
        return _markovlv.CAPITALLV_dGetEV(self, lTime)

# Register CAPITALLV in _markovlv:
_markovlv.CAPITALLV_swigregister(CAPITALLV)
class ANNUITYLV(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _markovlv.ANNUITYLV_swiginit(self, _markovlv.new_ANNUITYLV(*args))
    __swig_destroy__ = _markovlv.delete_ANNUITYLV

    def iSetTable(self, pcId):
        return _markovlv.ANNUITYLV_iSetTable(self, pcId)

    def vSetStartTime(self, lTime):
        return _markovlv.ANNUITYLV_vSetStartTime(self, lTime)

    def vSetStopTime(self, lTime):
        return _markovlv.ANNUITYLV_vSetStopTime(self, lTime)

    def vSetSAge(self, lTime):
        return _markovlv.ANNUITYLV_vSetSAge(self, lTime)

    def vSetG(self, lTime):
        return _markovlv.ANNUITYLV_vSetG(self, lTime)

    def vSetMaxProj(self, lMaxYearImp):
        return _markovlv.ANNUITYLV_vSetMaxProj(self, lMaxYearImp)

    def dSetQx(self, lTime, dValue):
        return _markovlv.ANNUITYLV_dSetQx(self, lTime, dValue)

    def dSetFx(self, lTime, dValue):
        return _markovlv.ANNUITYLV_dSetFx(self, lTime, dValue)

    def dSetSx(self, lTime, dValue):
        return _markovlv.ANNUITYLV_dSetSx(self, lTime, dValue)

    def dSetBaseYear(self, lTime):
        return _markovlv.ANNUITYLV_dSetBaseYear(self, lTime)

    def dSetActualYear(self, lTime):
        return _markovlv.ANNUITYLV_dSetActualYear(self, lTime)

    def dSetDisc(self, lTime, dValue):
        return _markovlv.ANNUITYLV_dSetDisc(self, lTime, dValue)

    def dGetDK(self, lTime):
        return _markovlv.ANNUITYLV_dGetDK(self, lTime)

    def dGetCF(self, lTime):
        return _markovlv.ANNUITYLV_dGetCF(self, lTime)

    def dGetQx(self, lTime, lYear):
        return _markovlv.ANNUITYLV_dGetQx(self, lTime, lYear)

    def dGetTqx(self, lTime):
        return _markovlv.ANNUITYLV_dGetTqx(self, lTime)

    def dGetTpx(self, lTime):
        return _markovlv.ANNUITYLV_dGetTpx(self, lTime)

    def dSetPre(self, dValue):
        return _markovlv.ANNUITYLV_dSetPre(self, dValue)

    def dSetRelativeQxForTime(self, lTime, dValue):
        return _markovlv.ANNUITYLV_dSetRelativeQxForTime(self, lTime, dValue)

    def vLeistReset(self):
        return _markovlv.ANNUITYLV_vLeistReset(self)

    def vSetLeistLinear(self, lTimeFrom, lTimeTo, dStartValue, dIncrement):
        return _markovlv.ANNUITYLV_vSetLeistLinear(self, lTimeFrom, lTimeTo, dStartValue, dIncrement)

    def vSetLeistExp(self, lTimeFrom, lTimeTo, dStartValue, dFactor):
        return _markovlv.ANNUITYLV_vSetLeistExp(self, lTimeFrom, lTimeTo, dStartValue, dFactor)

# Register ANNUITYLV in _markovlv:
_markovlv.ANNUITYLV_swigregister(ANNUITYLV)
class ANNUITYLV2(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _markovlv.ANNUITYLV2_swiginit(self, _markovlv.new_ANNUITYLV2(*args))
    __swig_destroy__ = _markovlv.delete_ANNUITYLV2

    def iSetTable1(self, pcId):
        return _markovlv.ANNUITYLV2_iSetTable1(self, pcId)

    def iSetTable2(self, pcId):
        return _markovlv.ANNUITYLV2_iSetTable2(self, pcId)

    def vSetStartTime(self, lTime):
        return _markovlv.ANNUITYLV2_vSetStartTime(self, lTime)

    def vSetStopTime(self, lTime):
        return _markovlv.ANNUITYLV2_vSetStopTime(self, lTime)

    def vSetSAge1(self, lTime):
        return _markovlv.ANNUITYLV2_vSetSAge1(self, lTime)

    def vSetSAge2(self, lTime):
        return _markovlv.ANNUITYLV2_vSetSAge2(self, lTime)

    def dSetQx1(self, lTime, dValue):
        return _markovlv.ANNUITYLV2_dSetQx1(self, lTime, dValue)

    def dSetFx1(self, lTime, dValue):
        return _markovlv.ANNUITYLV2_dSetFx1(self, lTime, dValue)

    def dSetQx2(self, lTime, dValue):
        return _markovlv.ANNUITYLV2_dSetQx2(self, lTime, dValue)

    def dSetFx2(self, lTime, dValue):
        return _markovlv.ANNUITYLV2_dSetFx2(self, lTime, dValue)

    def dSetBaseYear(self, lTime):
        return _markovlv.ANNUITYLV2_dSetBaseYear(self, lTime)

    def dSetActualYear(self, lTime):
        return _markovlv.ANNUITYLV2_dSetActualYear(self, lTime)

    def dSetDisc(self, lTime, dValue):
        return _markovlv.ANNUITYLV2_dSetDisc(self, lTime, dValue)

    def dGetDK(self, lTime, lState):
        return _markovlv.ANNUITYLV2_dGetDK(self, lTime, lState)

    def dGetCF(self, lTime):
        return _markovlv.ANNUITYLV2_dGetCF(self, lTime)

    def dGetQx1(self, lTime, lYear):
        return _markovlv.ANNUITYLV2_dGetQx1(self, lTime, lYear)

    def dGetQx2(self, lTime, lYear):
        return _markovlv.ANNUITYLV2_dGetQx2(self, lTime, lYear)

    def dSetY_Minus_X(self, lYAge, lXAge):
        return _markovlv.ANNUITYLV2_dSetY_Minus_X(self, lYAge, lXAge)

    def dSetBenefit(self, lState, dValue):
        return _markovlv.ANNUITYLV2_dSetBenefit(self, lState, dValue)

    def dSetPre(self, dValue):
        return _markovlv.ANNUITYLV2_dSetPre(self, dValue)

    def vLeistReset(self):
        return _markovlv.ANNUITYLV2_vLeistReset(self)

    def vSetLeistLinear(self, lTimeFrom, lTimeTo, dStartValue, dIncrement):
        return _markovlv.ANNUITYLV2_vSetLeistLinear(self, lTimeFrom, lTimeTo, dStartValue, dIncrement)

    def vSetLeistExp(self, lTimeFrom, lTimeTo, dStartValue, dFactor):
        return _markovlv.ANNUITYLV2_vSetLeistExp(self, lTimeFrom, lTimeTo, dStartValue, dFactor)

# Register ANNUITYLV2 in _markovlv:
_markovlv.ANNUITYLV2_swigregister(ANNUITYLV2)
class WIDDOWLV(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _markovlv.WIDDOWLV_swiginit(self, _markovlv.new_WIDDOWLV(*args))
    __swig_destroy__ = _markovlv.delete_WIDDOWLV

    def vSetStartTime(self, lTime):
        return _markovlv.WIDDOWLV_vSetStartTime(self, lTime)

    def vSetStopTime(self, lTime):
        return _markovlv.WIDDOWLV_vSetStopTime(self, lTime)

    def dSetQx(self, lTime, dValue):
        return _markovlv.WIDDOWLV_dSetQx(self, lTime, dValue)

    def dSetQy(self, lTime, dValue):
        return _markovlv.WIDDOWLV_dSetQy(self, lTime, dValue)

    def dSetFx(self, lTime, dValue):
        return _markovlv.WIDDOWLV_dSetFx(self, lTime, dValue)

    def dSetFy(self, lTime, dValue):
        return _markovlv.WIDDOWLV_dSetFy(self, lTime, dValue)

    def dSetHx(self, lTime, dValue):
        return _markovlv.WIDDOWLV_dSetHx(self, lTime, dValue)

    def dSetYx(self, lTime, dValue):
        return _markovlv.WIDDOWLV_dSetYx(self, lTime, dValue)

    def dSetBaseYear(self, lTime):
        return _markovlv.WIDDOWLV_dSetBaseYear(self, lTime)

    def dSetActualYear(self, lTime):
        return _markovlv.WIDDOWLV_dSetActualYear(self, lTime)

    def dSetDisc(self, lTime, dValue):
        return _markovlv.WIDDOWLV_dSetDisc(self, lTime, dValue)

    def dGetDK(self, lTime):
        return _markovlv.WIDDOWLV_dGetDK(self, lTime)

    def dGetCF(self, lTime):
        return _markovlv.WIDDOWLV_dGetCF(self, lTime)

    def dGetQx(self, lTime, lYear):
        return _markovlv.WIDDOWLV_dGetQx(self, lTime, lYear)

    def dSetPre(self, dValue):
        return _markovlv.WIDDOWLV_dSetPre(self, dValue)

    def vLeistReset(self):
        return _markovlv.WIDDOWLV_vLeistReset(self)

    def vSetLeistLinear(self, lTimeFrom, lTimeTo, dStartValue, dIncrement):
        return _markovlv.WIDDOWLV_vSetLeistLinear(self, lTimeFrom, lTimeTo, dStartValue, dIncrement)

    def vSetLeistExp(self, lTimeFrom, lTimeTo, dStartValue, dFactor):
        return _markovlv.WIDDOWLV_vSetLeistExp(self, lTimeFrom, lTimeTo, dStartValue, dFactor)

# Register WIDDOWLV in _markovlv:
_markovlv.WIDDOWLV_swigregister(WIDDOWLV)
class GLMOD(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _markovlv.GLMOD_swiginit(self, _markovlv.new_GLMOD())
    __swig_destroy__ = _markovlv.delete_GLMOD

    def dSetQx(self, lTable, lType, lSex, lTime, dValue):
        return _markovlv.GLMOD_dSetQx(self, lTable, lType, lSex, lTime, dValue)

    def dSetFx(self, lTable, lType, lSex, lTime, dValue):
        return _markovlv.GLMOD_dSetFx(self, lTable, lType, lSex, lTime, dValue)

    def dSetSx(self, lTable, lType, lSex, lTime, dValue):
        return _markovlv.GLMOD_dSetSx(self, lTable, lType, lSex, lTime, dValue)

    def dSetBaseYear(self, lTable, lType, lSex, lTime):
        return _markovlv.GLMOD_dSetBaseYear(self, lTable, lType, lSex, lTime)

    def dSetActualYear(self, lTime):
        return _markovlv.GLMOD_dSetActualYear(self, lTime)

    def dSetDisc(self, lTime, dValue):
        return _markovlv.GLMOD_dSetDisc(self, lTime, dValue)

    def vStress(self, lType, dAmount):
        return _markovlv.GLMOD_vStress(self, lType, dAmount)

    def vAddAnnuity(self, lSex, lX, lS, lNTimes, dLeist, dPraem, dITechn):
        return _markovlv.GLMOD_vAddAnnuity(self, lSex, lX, lS, lNTimes, dLeist, dPraem, dITechn)

    def vAddEndowment(self, lSex, lX, lS, dLeist, dPraem, dITechn):
        return _markovlv.GLMOD_vAddEndowment(self, lSex, lX, lS, dLeist, dPraem, dITechn)

    def vAddWiddow(self, lSex, lX, lS, lNTimes, dLeist, dPraem, dITechn):
        return _markovlv.GLMOD_vAddWiddow(self, lSex, lX, lS, lNTimes, dLeist, dPraem, dITechn)

    def vSetRKWAnnuity(self, lType, dAmount):
        return _markovlv.GLMOD_vSetRKWAnnuity(self, lType, dAmount)

    def vSetRKWEndowment(self, lType, dAmount):
        return _markovlv.GLMOD_vSetRKWEndowment(self, lType, dAmount)

    def vUpdateOperator(self):
        return _markovlv.GLMOD_vUpdateOperator(self)

    def dGetDK(self, lTime):
        return _markovlv.GLMOD_dGetDK(self, lTime)

    def dGetDKDetail(self, lTime, lState):
        return _markovlv.GLMOD_dGetDKDetail(self, lTime, lState)

    def dGetDKTilde(self, lTime):
        return _markovlv.GLMOD_dGetDKTilde(self, lTime)

    def dGetFVDK(self):
        return _markovlv.GLMOD_dGetFVDK(self)

    def dGetCF(self, lTime):
        return _markovlv.GLMOD_dGetCF(self, lTime)

    def dGetCFDetail(self, lTime, lState):
        return _markovlv.GLMOD_dGetCFDetail(self, lTime, lState)

    def dGetStatDK(self, *args):
        return _markovlv.GLMOD_dGetStatDK(self, *args)

    def dGetQx(self, lOrder, lTafel, lSex, lTime, lYear):
        return _markovlv.GLMOD_dGetQx(self, lOrder, lTafel, lSex, lTime, lYear)

    def dSetRelativeQxForTime(self, lTime, dValue):
        return _markovlv.GLMOD_dSetRelativeQxForTime(self, lTime, dValue)

    def iReadInforce(self, iP, iL, strFileName):
        return _markovlv.GLMOD_iReadInforce(self, iP, iL, strFileName)

    def vPrintTex(self, strName):
        return _markovlv.GLMOD_vPrintTex(self, strName)

# Register GLMOD in _markovlv:
_markovlv.GLMOD_swigregister(GLMOD)
class ANNMOD(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _markovlv.ANNMOD_swiginit(self, _markovlv.new_ANNMOD())
    __swig_destroy__ = _markovlv.delete_ANNMOD

    def dSetQx(self, lTable, lType, lSex, lTime, dValue):
        return _markovlv.ANNMOD_dSetQx(self, lTable, lType, lSex, lTime, dValue)

    def dSetFx(self, lTable, lType, lSex, lTime, dValue):
        return _markovlv.ANNMOD_dSetFx(self, lTable, lType, lSex, lTime, dValue)

    def dSetSx(self, lTable, lType, lSex, lTime, dValue):
        return _markovlv.ANNMOD_dSetSx(self, lTable, lType, lSex, lTime, dValue)

    def dSetBaseYear(self, lTable, lType, lSex, lTime):
        return _markovlv.ANNMOD_dSetBaseYear(self, lTable, lType, lSex, lTime)

    def dSetActualYear(self, lTime):
        return _markovlv.ANNMOD_dSetActualYear(self, lTime)

    def dSetDisc(self, lTime, dValue):
        return _markovlv.ANNMOD_dSetDisc(self, lTime, dValue)

    def vAddAnnuity1(self, lSex, lX, lS, lNTimes, dLeist, dPraem, dITechn, dIncrease):
        return _markovlv.ANNMOD_vAddAnnuity1(self, lSex, lX, lS, lNTimes, dLeist, dPraem, dITechn, dIncrease)

    def vAddAnnuity0(self, lX, lS, lNTimes, dLeist, dPraem, dITechn, dIncrease):
        return _markovlv.ANNMOD_vAddAnnuity0(self, lX, lS, lNTimes, dLeist, dPraem, dITechn, dIncrease)

    def vAddAnnuity2xy(self, lSex1, lSex2, lX, lY, lS, lNTimes, dLeist, dPraem, dITechn, dIncrease):
        return _markovlv.ANNMOD_vAddAnnuity2xy(self, lSex1, lSex2, lX, lY, lS, lNTimes, dLeist, dPraem, dITechn, dIncrease)

    def vAddAnnuity2xyBar(self, lSex1, lSex2, lX, lY, lS, lNTimes, dLeist, dPraem, dITechn, dIncrease):
        return _markovlv.ANNMOD_vAddAnnuity2xyBar(self, lSex1, lSex2, lX, lY, lS, lNTimes, dLeist, dPraem, dITechn, dIncrease)

    def vAddAnnuity2xToy(self, lSex1, lSex2, lX, lY, lS, lNTimes, dLeist, dPraem, dITechn, dIncrease):
        return _markovlv.ANNMOD_vAddAnnuity2xToy(self, lSex1, lSex2, lX, lY, lS, lNTimes, dLeist, dPraem, dITechn, dIncrease)

    def vAddAnnuity2yTox(self, lSex1, lSex2, lX, lY, lS, lNTimes, dLeist, dPraem, dITechn, dIncrease):
        return _markovlv.ANNMOD_vAddAnnuity2yTox(self, lSex1, lSex2, lX, lY, lS, lNTimes, dLeist, dPraem, dITechn, dIncrease)

    def vUpdateOperator(self):
        return _markovlv.ANNMOD_vUpdateOperator(self)

    def dGetDK(self, lTime):
        return _markovlv.ANNMOD_dGetDK(self, lTime)

    def dGetFVDK(self):
        return _markovlv.ANNMOD_dGetFVDK(self)

    def dGetCF(self, lTime):
        return _markovlv.ANNMOD_dGetCF(self, lTime)

    def dGetStatDK(self, *args):
        return _markovlv.ANNMOD_dGetStatDK(self, *args)

    def dGetQx(self, lOrder, lTafel, lSex, lTime, lYear):
        return _markovlv.ANNMOD_dGetQx(self, lOrder, lTafel, lSex, lTime, lYear)

    def dSetRelativeQxForTime(self, lTime, dValue):
        return _markovlv.ANNMOD_dSetRelativeQxForTime(self, lTime, dValue)

# Register ANNMOD in _markovlv:
_markovlv.ANNMOD_swigregister(ANNMOD)
class VAMOD(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _markovlv.VAMOD_swiginit(self, _markovlv.new_VAMOD())
    __swig_destroy__ = _markovlv.delete_VAMOD

    def dSetQx(self, lTable, lType, lSex, lTime, dValue):
        return _markovlv.VAMOD_dSetQx(self, lTable, lType, lSex, lTime, dValue)

    def dSetFx(self, lTable, lType, lSex, lTime, dValue):
        return _markovlv.VAMOD_dSetFx(self, lTable, lType, lSex, lTime, dValue)

    def dSetSx(self, lTable, lType, lSex, lTime, dValue):
        return _markovlv.VAMOD_dSetSx(self, lTable, lType, lSex, lTime, dValue)

    def dSetBaseYear(self, lTable, lType, lSex, lTime):
        return _markovlv.VAMOD_dSetBaseYear(self, lTable, lType, lSex, lTime)

    def dSetActualYear(self, lTime):
        return _markovlv.VAMOD_dSetActualYear(self, lTime)

    def dSetDisc(self, lTime, dValue):
        return _markovlv.VAMOD_dSetDisc(self, lTime, dValue)

    def iAnalyseToken(self, pcString):
        return _markovlv.VAMOD_iAnalyseToken(self, pcString)

    def vGenerateTrajectory(self):
        return _markovlv.VAMOD_vGenerateTrajectory(self)

    def dGetMeanCF(self, lTime, lNrSim):
        return _markovlv.VAMOD_dGetMeanCF(self, lTime, lNrSim)

    def dGetMeanCFAnn(self, lTime, lNrSim):
        return _markovlv.VAMOD_dGetMeanCFAnn(self, lTime, lNrSim)

    def dGetMeanCFPrem(self, lTime, lNrSim):
        return _markovlv.VAMOD_dGetMeanCFPrem(self, lTime, lNrSim)

    def dGetMeanCFMort(self, lTime, lNrSim):
        return _markovlv.VAMOD_dGetMeanCFMort(self, lTime, lNrSim)

    def dGetMeanDK(self, lTime, lNrSim):
        return _markovlv.VAMOD_dGetMeanDK(self, lTime, lNrSim)

    def dGetMeanDKAnnMort(self, lTime, lNrSim):
        return _markovlv.VAMOD_dGetMeanDKAnnMort(self, lTime, lNrSim)

    def dGetMeanDKPrem(self, lTime, lNrSim):
        return _markovlv.VAMOD_dGetMeanDKPrem(self, lTime, lNrSim)

    def dGetDKDetail(self, lTime, lState):
        return _markovlv.VAMOD_dGetDKDetail(self, lTime, lState)

    def vNewSeed(self, lSeed):
        return _markovlv.VAMOD_vNewSeed(self, lSeed)

    def vResetMeanResults(self):
        return _markovlv.VAMOD_vResetMeanResults(self)
    lSeed = property(_markovlv.VAMOD_lSeed_get, _markovlv.VAMOD_lSeed_set)

    def vAddDeath(self, lSex, lX, lS, lNTimes, dLeist, dPraem, dITechn):
        return _markovlv.VAMOD_vAddDeath(self, lSex, lX, lS, lNTimes, dLeist, dPraem, dITechn)

    def vAddEndowment(self, lSex, lX, lS, lNTimes, dLeist, dPraem, dITechn):
        return _markovlv.VAMOD_vAddEndowment(self, lSex, lX, lS, lNTimes, dLeist, dPraem, dITechn)

    def vAddPremium(self, lSex, lX, lS, lNTimes, dLeist, dPraem, dITechn):
        return _markovlv.VAMOD_vAddPremium(self, lSex, lX, lS, lNTimes, dLeist, dPraem, dITechn)

    def vUpdateOperator(self):
        return _markovlv.VAMOD_vUpdateOperator(self)

    def dGetQx(self, lOrder, lTafel, lSex, lTime, lYear):
        return _markovlv.VAMOD_dGetQx(self, lOrder, lTafel, lSex, lTime, lYear)

    def dSetRelativeQxForTime(self, lTime, dValue):
        return _markovlv.VAMOD_dSetRelativeQxForTime(self, lTime, dValue)

    def iReadInforce(self, iP, iL, strFileName):
        return _markovlv.VAMOD_iReadInforce(self, iP, iL, strFileName)

    def vPrintTex(self, strName):
        return _markovlv.VAMOD_vPrintTex(self, strName)
    symPara = property(_markovlv.VAMOD_symPara_get, _markovlv.VAMOD_symPara_set)

    def iSetTable(self, iSex, pcId, dTech):
        return _markovlv.VAMOD_iSetTable(self, iSex, pcId, dTech)

# Register VAMOD in _markovlv:
_markovlv.VAMOD_swigregister(VAMOD)
class TABLESERVER(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _markovlv.TABLESERVER_swiginit(self, _markovlv.new_TABLESERVER())

    def vSetTable(self, pcTable):
        return _markovlv.TABLESERVER_vSetTable(self, pcTable)

    def dGetValue(self, iAge):
        return _markovlv.TABLESERVER_dGetValue(self, iAge)

    def iTableNumber(self):
        return _markovlv.TABLESERVER_iTableNumber(self)

    def iX0(self):
        return _markovlv.TABLESERVER_iX0(self)

    def iXOmega(self):
        return _markovlv.TABLESERVER_iXOmega(self)

    def iT0(self):
        return _markovlv.TABLESERVER_iT0(self)

    def dITech(self):
        return _markovlv.TABLESERVER_dITech(self)

    def iGender(self):
        return _markovlv.TABLESERVER_iGender(self)

    def pcAllTarifs(self):
        return _markovlv.TABLESERVER_pcAllTarifs(self)
    __swig_destroy__ = _markovlv.delete_TABLESERVER

# Register TABLESERVER in _markovlv:
_markovlv.TABLESERVER_swigregister(TABLESERVER)

